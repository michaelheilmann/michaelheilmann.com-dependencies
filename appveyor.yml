# AppVeyor configuration for AppVeyor project "primordialmachine".
clone_depth: 1

# Build worker image (VM template).
image: Visual Studio 2022

# Build on pushes to all branches.
#branches:
#  only:
#    - main
#    - develop

# Do not build on tag pushes.
skip_tags: true

# Build platform "x64" and "Win32".
platform:
    - x64
    - Win32

# Build configurations.
configuration:
    - Release
    - Debug
    - MinSizeRel
    - RelWithDebInfo

install:
    # Download and install CMake.
    - set CMAKE_URL="https://cmake.org/files/v3.29/cmake-3.29.0-windows-x86_64.zip"
    - appveyor DownloadFile %CMAKE_URL% -FileName cmake.zip
    - 7z x cmake.zip -oC:\projects\deps > nul
    - move C:\projects\deps\cmake-* C:\projects\deps\cmake # Move to a version-agnostic directory
    - set PATH=C:\projects\deps\cmake\bin;%PATH%
    - cmake --version

# Generate solution and project files.
before_build:
    - ps: |
       if (${env:PLATFORM} -eq 'Win32') {
          ${env:SUFFIX}="x86"
        } elseif(${env:PLATFORM} -eq 'x64') {
          ${env:SUFFIX}="x64"
        } else {
          throw "unsupported platform ${env:PLATFORM}";
        }
        ${env:SUFFIX}="$(${env:CONFIGURATION}.ToLower())-${env:SUFFIX}"
        Write-Host "Suffix: ${env:SUFFIX}";
    - ps: |
        # The name of the CMake generator, for example "Visual Studio 17 2022".
        ${env:CMAKE_GENERATOR_NAME}="Visual Studio 17 2022"
        # The name of the release, for example "michaelheilmann.com-${env:APPVEYOR_REPO_BRANCH}-10.1.9".
        ${env:RELEASE_NAME}="michaelheilmann.com-dependencies-v$(${env:APPVEYOR_BUILD_VERSION}.ToLower())"
        Write-Host "Release Name: ${env:RELEASE_NAME}"
        Write-Host "AppVeyor Platform: ${env:PLATFORM}"
        Write-Host "AppVeyor Configuration: ${env:CONFIGURATION}"
        Write-Host "AppVeyor Build Folder: ${env:APPVEYOR_BUILD_FOLDER}"
        Write-Host "CMake Generator: ${env:CMAKE_GENERATOR_NAME}"
    - ps: |
        Write-Host "CMake Generator: ${env:CMAKE_GENERATOR_NAME}"
        Write-Host "CMake Architecture: ${env:CMAKE_ARCHITECTURE_NAME}"
        cmake -G ${env:CMAKE_GENERATOR_NAME} -A ${env:PLATFORM} CMakeLists.txt

build:
    parallel: true # enable MSBuild parallel builds
    project: Arcadia-Dependencies.sln # path to Visual Studio solution or project

after_build:

# If one matrix entry fails, all entries fails (https://www.appveyor.com/docs/build-configuration#failing-strategy).
matrix:
    fast_finish: true

artifacts:
    - path: my-opengl\pkg\my-opengl-$(SUFFIX).zip
      name: my-opengl\my-opengl-$(SUFFIX).zip
    - path: my-openal\pkg\my-openal-$(SUFFIX).zip
      name: my-openal\my-openal-$(SUFFIX).zip
    - path: my-freetype\pkg\my-freetype-$(SUFFIX).zip
      name: my-freetype\my-freetype-$(SUFFIX).zip
    - path: my-libpng\pkg\my-libpng-$(SUFFIX).zip
      name: my-libpng\my-libpng-$(SUFFIX).zip
    - path: my-zlib\pkg\my-zlib-$(SUFFIX).zip
      name: my-zlib\my-zlib-$(SUFFIX).zip

deploy:
    release: michaelheilmann.com-dependencies-v$(APPVEYOR_BUILD_VERSION)
    tag: michaelheilmann.com-dependencies-v$(APPVEYOR_BUILD_VERSION)
    description: 'michaelheilmann.com dependencies v$(APPVEYOR_BUILD_VERSION)'
    provider: GitHub
    auth_token:
        secure: iTg7jon0UCvoGT5y2flVxKbuZIM0cCf+3cKmhb811umlbh9zHOtvJQjEqDU53XDT8/SE5zreMGYwnShZDpovMZRmpiuTdlQD9Y0hjKw1a+QBZguyWOpmttY9hv8E5FFq # encrypted token from GitHub
        artifact: >
            my-opengl\my-opengl-$(SUFFIX).zip,
            my-openal\my-openal-$(SUFFIX).zip,
            my-freetype\my-freetype-$(SUFFIX).zip,
            my-libpng\my-libpng-$(SUFFIX).zip,
            my-zlib\pkg\my-zlib-$(SUFFIX).zip
    draft: true
    prerelease: false
    force_update: true
    on:
        branch: main # release from master branch only
